version: "3.3"

services:
  redis:
    image: redis:7-alpine
    container_name: videoai-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: videoai-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    container_name: videoai-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: videoai
      POSTGRES_USER: videoai
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  web:
    build: .
    container_name: videoai-web
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://videoai:password@postgres:5432/videoai
      REDIS_URL: redis://redis:6379/0
      CELERY_BROKER_URL: pyamqp://admin:admin123@rabbitmq:5672//
      CELERY_RESULT_BACKEND: redis://redis:6379/1
      PROJECT_NAME: VideoAI
      VERSION: 1.0.0
      DEBUG: "false"
      LOG_LEVEL: INFO
      # AI API Keys
      OPENAI_API_KEY: ${OPENAI_API_KEY:-}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY:-}
      PIAPI_API_KEY: ${PIAPI_API_KEY:-}
      STABLE_DIFFUSION_API_KEY: ${STABLE_DIFFUSION_API_KEY:-}
    volumes:
      - ./uploads:/app/uploads
      - ./temp:/app/temp
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
      - rabbitmq
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:
